using TensorOperations, Serialization, LinearAlgebra
begin
    nv = deserialize("nv.jlbin")
    no = deserialize("no.jlbin")
    I_vo = zeros(Float64, nv, no)
    f_ov = deserialize("f_ov.jlbin")
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -2 * f_ov[ i_2, a_2 ] * T2_vvoo[ a_1, a_2, i_2, i_1 ]
    T2_vvoo = nothing
    f_ov = nothing
    f_vo = deserialize("f_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 2 * f_vo[ a_1, i_1 ]
    f_vo = nothing
    g_voov = deserialize("g_voov.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 4 * g_voov[ a_1, i_2, i_1, a_2 ] * T1_vo[ a_2, i_2 ]
    T1_vo = nothing
    g_voov = nothing
    g_vovo = deserialize("g_vovo.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -2 * g_vovo[ a_1, i_2, a_2, i_1 ] * T1_vo[ a_2, i_2 ]
    T1_vo = nothing
    g_vovo = nothing
    g_oovo = deserialize("g_oovo.jlbin")
    INTpp_vvoo = deserialize("INTpp_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 2 * g_oovo[ i_2, i_3, a_2, i_1 ] * INTpp_vvoo[ a_1, a_2, i_2, i_3 ]
    INTpp_vvoo = nothing
    g_oovo = nothing
    g_vovv = deserialize("g_vovv.jlbin")
    INTpp_vvoo = deserialize("INTpp_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -2 * g_vovv[ a_1, i_2, a_2, a_3 ] * INTpp_vvoo[ a_3, a_2, i_1, i_2 ]
    INTpp_vvoo = nothing
    g_vovv = nothing
    g_oovo = deserialize("g_oovo.jlbin")
    INTpp_vvoo = deserialize("INTpp_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -4 * g_oovo[ i_2, i_3, a_2, i_1 ] * INTpp_vvoo[ a_1, a_2, i_3, i_2 ]
    INTpp_vvoo = nothing
    g_oovo = nothing
    f_vv = deserialize("f_vv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 2 * f_vv[ a_1, a_2 ] * T1_vo[ a_2, i_1 ]
    T1_vo = nothing
    f_vv = nothing
    f_oo = deserialize("f_oo.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -2 * f_oo[ i_2, i_1 ] * T1_vo[ a_1, i_2 ]
    T1_vo = nothing
    f_oo = nothing
    g_vovv = deserialize("g_vovv.jlbin")
    INTpp_vvoo = deserialize("INTpp_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 4 * g_vovv[ a_1, i_2, a_2, a_3 ] * INTpp_vvoo[ a_2, a_3, i_1, i_2 ]
    INTpp_vvoo = nothing
    g_vovv = nothing
    f_ov = deserialize("f_ov.jlbin")
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 4 * f_ov[ i_2, a_2 ] * T2_vvoo[ a_1, a_2, i_1, i_2 ]
    T2_vvoo = nothing
    f_ov = nothing
    I_ov = zeros(Float64, no, nv)
    g_oovv = deserialize("g_oovv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_ov[ i_2, a_2 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * T1_vo[ a_3, i_3 ]
    T1_vo = nothing
    g_oovv = nothing
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -4 * I_ov[ i_2, a_2 ] * T2_vvoo[ a_1, a_2, i_2, i_1 ]
    T2_vvoo = nothing
    I_ov = nothing
    I_ov = zeros(Float64, no, nv)
    g_oovv = deserialize("g_oovv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_ov[ i_2, a_2 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * T1_vo[ a_3, i_3 ]
    T1_vo = nothing
    g_oovv = nothing
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 8 * I_ov[ i_2, a_2 ] * T2_vvoo[ a_1, a_2, i_1, i_2 ]
    T2_vvoo = nothing
    I_ov = nothing
    I_oo = zeros(Float64, no, no)
    f_ov = deserialize("f_ov.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_oo[ i_2, i_1 ] += f_ov[ i_2, a_2 ] * T1_vo[ a_2, i_1 ]
    T1_vo = nothing
    f_ov = nothing
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -2 * I_oo[ i_2, i_1 ] * T1_vo[ a_1, i_2 ]
    T1_vo = nothing
    I_oo = nothing
    I_oovo = zeros(Float64, no, no, nv, no)
    g_oovv = deserialize("g_oovv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_oovo[ i_2, i_3, a_2, i_1 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * T1_vo[ a_3, i_1 ]
    T1_vo = nothing
    g_oovv = nothing
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 2 * I_oovo[ i_2, i_3, a_2, i_1 ] * T2_vvoo[ a_1, a_2, i_2, i_3 ]
    T2_vvoo = nothing
    I_oovo = nothing
    I_oovo = zeros(Float64, no, no, nv, no)
    g_oovv = deserialize("g_oovv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_oovo[ i_2, i_3, a_2, i_1 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * T1_vo[ a_3, i_1 ]
    T1_vo = nothing
    g_oovv = nothing
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -4 * I_oovo[ i_2, i_3, a_2, i_1 ] * T2_vvoo[ a_1, a_2, i_3, i_2 ]
    T2_vvoo = nothing
    I_oovo = nothing
    I_oo = zeros(Float64, no, no)
    g_oovv = deserialize("g_oovv.jlbin")
    INTpp_vvoo = deserialize("INTpp_vvoo.jlbin")
    @tensor I_oo[ i_3, i_1 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * INTpp_vvoo[ a_2, a_3, i_1, i_2 ]
    INTpp_vvoo = nothing
    g_oovv = nothing
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 2 * I_oo[ i_3, i_1 ] * T1_vo[ a_1, i_3 ]
    T1_vo = nothing
    I_oo = nothing
    I_oo = zeros(Float64, no, no)
    g_oovv = deserialize("g_oovv.jlbin")
    INTpp_vvoo = deserialize("INTpp_vvoo.jlbin")
    @tensor I_oo[ i_3, i_1 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * INTpp_vvoo[ a_3, a_2, i_1, i_2 ]
    INTpp_vvoo = nothing
    g_oovv = nothing
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -4 * I_oo[ i_3, i_1 ] * T1_vo[ a_1, i_3 ]
    T1_vo = nothing
    I_oo = nothing
    I_ov = zeros(Float64, no, nv)
    g_oovv = deserialize("g_oovv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_ov[ i_2, a_3 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * T1_vo[ a_2, i_3 ]
    T1_vo = nothing
    g_oovv = nothing
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += 2 * I_ov[ i_2, a_3 ] * T2_vvoo[ a_1, a_3, i_2, i_1 ]
    T2_vvoo = nothing
    I_ov = nothing
    I_ov = zeros(Float64, no, nv)
    g_oovv = deserialize("g_oovv.jlbin")
    T1_vo = deserialize("T1_vo.jlbin")
    @tensor I_ov[ i_2, a_3 ] += g_oovv[ i_2, i_3, a_2, a_3 ] * T1_vo[ a_2, i_3 ]
    T1_vo = nothing
    g_oovv = nothing
    T2_vvoo = deserialize("T2_vvoo.jlbin")
    @tensor I_vo[ a_1, i_1 ] += -4 * I_ov[ i_2, a_3 ] * T2_vvoo[ a_1, a_3, i_1, i_2 ]
    T2_vvoo = nothing
    I_ov = nothing
    return I_vo
    


end
norm(I_vo)^2